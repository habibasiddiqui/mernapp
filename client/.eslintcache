[{"E:\\navttc-saylani\\final-mernapp\\client\\src\\index.js":"1","E:\\navttc-saylani\\final-mernapp\\client\\src\\App.js":"2","E:\\navttc-saylani\\final-mernapp\\client\\src\\reportWebVitals.js":"3","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\tables\\Editable.js":"4","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\Header.js":"5","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\Home.js":"6","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\users\\Users.js":"7","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\users\\SingleUser.js":"8","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\users\\Add.js":"9","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\posts\\Posts.js":"10","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\posts\\SinglePost.js":"11","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\posts\\EditPost.js":"12","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\posts\\SinglePostHome.js":"13","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\posts\\AddPost.js":"14","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\tables\\tableIcons.js":"15","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\users\\AddDialog.js":"16","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\posts\\PostHome.js":"17","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\users\\DeleteDialog.js":"18","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\posts\\DeleteDialog.js":"19","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\authorization\\Signin.js":"20","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\authorization\\SignOut.js":"21","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\authorization\\Signup.js":"22","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\authorization\\Password.js":"23","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\tables\\UserEditable.js":"24","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\users\\EditDialog.js":"25","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\tables\\PostEditable.js":"26","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\posts\\AddDialog.js":"27","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\posts\\EditDialog.js":"28","E:\\navttc-saylani\\final-mernapp\\client\\src\\contexts\\AuthContext.js":"29","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\PrivateRoute.js":"30","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\AdminHeader.js":"31","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\GeneralHeader.js":"32","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\LoggedHeader.js":"33"},{"size":382,"mtime":1616503120201,"results":"34","hashOfConfig":"35"},{"size":2521,"mtime":1616541671849,"results":"36","hashOfConfig":"35"},{"size":375,"mtime":1616503120202,"results":"37","hashOfConfig":"35"},{"size":4266,"mtime":1616517796895,"results":"38","hashOfConfig":"35"},{"size":1791,"mtime":1616541844616,"results":"39","hashOfConfig":"35"},{"size":2384,"mtime":1616540523116,"results":"40","hashOfConfig":"35"},{"size":2977,"mtime":1616517702828,"results":"41","hashOfConfig":"35"},{"size":1546,"mtime":1616503120181,"results":"42","hashOfConfig":"35"},{"size":2670,"mtime":1616532715215,"results":"43","hashOfConfig":"35"},{"size":3617,"mtime":1616543602589,"results":"44","hashOfConfig":"35"},{"size":4090,"mtime":1616503120173,"results":"45","hashOfConfig":"35"},{"size":3644,"mtime":1616528738546,"results":"46","hashOfConfig":"35"},{"size":1651,"mtime":1616503120174,"results":"47","hashOfConfig":"35"},{"size":3332,"mtime":1616508557468,"results":"48","hashOfConfig":"35"},{"size":2359,"mtime":1616503120178,"results":"49","hashOfConfig":"35"},{"size":5759,"mtime":1616533526167,"results":"50","hashOfConfig":"35"},{"size":4669,"mtime":1616503120171,"results":"51","hashOfConfig":"35"},{"size":1394,"mtime":1616503120181,"results":"52","hashOfConfig":"35"},{"size":1426,"mtime":1616503120169,"results":"53","hashOfConfig":"35"},{"size":4126,"mtime":1616541967950,"results":"54","hashOfConfig":"35"},{"size":974,"mtime":1616540851844,"results":"55","hashOfConfig":"35"},{"size":5451,"mtime":1616503120166,"results":"56","hashOfConfig":"35"},{"size":2165,"mtime":1616503120165,"results":"57","hashOfConfig":"35"},{"size":4383,"mtime":1616521603238,"results":"58","hashOfConfig":"35"},{"size":5305,"mtime":1616533922767,"results":"59","hashOfConfig":"35"},{"size":4768,"mtime":1616543948163,"results":"60","hashOfConfig":"35"},{"size":5331,"mtime":1616544148815,"results":"61","hashOfConfig":"35"},{"size":6155,"mtime":1616532531678,"results":"62","hashOfConfig":"35"},{"size":567,"mtime":1616541997136,"results":"63","hashOfConfig":"35"},{"size":427,"mtime":1616539610952,"results":"64","hashOfConfig":"35"},{"size":1277,"mtime":1616541249797,"results":"65","hashOfConfig":"35"},{"size":1283,"mtime":1616541279651,"results":"66","hashOfConfig":"35"},{"size":1274,"mtime":1616541264750,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},"jzx6iz",{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"71"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"71"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"71"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"71"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"71"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"71"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"71"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"71"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"71"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"71"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"71"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"71"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\navttc-saylani\\final-mernapp\\client\\src\\index.js",["148"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Editable from './components/tables/Editable';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n    {/* <Editable /> */}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n",["149","150"],"E:\\navttc-saylani\\final-mernapp\\client\\src\\App.js",["151","152"],"E:\\navttc-saylani\\final-mernapp\\client\\src\\reportWebVitals.js",[],"E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\tables\\Editable.js",["153","154","155","156","157","158","159","160","161","162","163","164"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { tableIcons } from \"./tableIcons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  InputAdornment,\r\n  Typography,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddDialog from \"../users/AddDialog\";\r\nimport EditUserDialog from \"../users/EditDialog\";\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\n// ////////////////////////////////////////////////////////////////////////////////////////\r\nfunction Editable({ rows, cols, tableName, name }) {\r\n  const classes = useStyles();\r\n\r\n  // table column data\r\n  const [columns, setColumns] = useState([]);\r\n  // table row data\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setData(rows);\r\n    setColumns(cols);\r\n  }, [rows]);\r\n\r\n  // for add dialog box\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n\r\n  // update\r\n  const handleUpdate = (newData, oldData) => {\r\n    console.log('---new----', newData);\r\n    console.log('---old----', oldData);\r\n\r\n  }\r\n\r\n\r\n\r\n  // delete\r\n  const handleDelete = (data) => {\r\n    console.log(data);\r\n    let row_id = data._id;\r\n    axios.delete(`http://localhost:4000/api/${name}/${row_id}`)\r\n    .then(\r\n      res => {\r\n        console.log('deleted successfully')\r\n      }\r\n    )\r\n    .catch(\r\n      e => console.log(e)\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AddDialog\r\n        mainOpen={open}\r\n        mainSetOpen={setOpen}\r\n        mainHandleClose={handleClose}\r\n      />\r\n\r\n      <EditUserDialog \r\n      \r\n      />\r\n\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title={`All ${tableName} Information`}\r\n        columns={\r\n          tableName == \"Posts\"\r\n            ? [\r\n                ...columns,\r\n                {\r\n                  title: \"Image\",\r\n                  field: \"image\",\r\n                  render: (rowData) => (\r\n                    <img src={rowData.image} style={{ width: 300 }} />\r\n                  ),\r\n                },\r\n              ]\r\n            : columns\r\n        }\r\n        data={data}\r\n        actions={[\r\n          {\r\n            icon: tableIcons.Add,\r\n            tooltip: \"Add User\",\r\n            isFreeAction: true,\r\n            onClick: handleClickOpen,\r\n          },\r\n        ]}\r\n        options={{\r\n          headerStyle: {\r\n            // backgroundColor: \"#5ddef4\",\r\n\r\n            // backgroundColor: '#ff9e80',\r\n\r\n            color: \"#00\",\r\n            fontSize: \"18px\",\r\n            fontWeight: 'bold'\r\n          },\r\n          actionsColumnIndex: -1,\r\n          addRowPosition: 'last',\r\n        }}\r\n        editable={{\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataUpdate = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataUpdate[index] = newData;\r\n                setData([...dataUpdate]);\r\n                handleUpdate(newData, oldData);\r\n                resolve();\r\n              }, 1000);\r\n            }),\r\n          onRowDelete: (oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n                handleDelete(oldData);\r\n                resolve();\r\n              }, 1000);\r\n            }),\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Editable;\r\n","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\Header.js",["165","166","167","168","169","170","171"],"E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\Home.js",["172","173","174","175","176","177","178","179","180","181","182","183","184"],"E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\users\\Users.js",["185","186","187","188","189","190","191","192","193","194","195","196","197","198"],"import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ListGroup, Row, Col, Button, Alert } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport DeleteDialog from './DeleteDialog';\r\nimport Editable from \"../tables/Editable\";\r\nimport UserEditable from \"../tables/UserEditable\";\r\n\r\nfunction Users() {\r\n\r\n  // table column\r\n  const [cols, setCols] = useState([\r\n    { title: 'Name', field: 'name', editable: 'onUpdate' },\r\n    { title: 'Email', field: 'email', editable: 'never' },\r\n  ])\r\n  // table rows\r\n  const [state, setstate] = useState([]);\r\n\r\n  const [reload, setReload] = useState(false);\r\n  \r\n  const [msg, setMsg] = useState('');\r\n  const [delFlag, setDelFlag] = useState(false);\r\n\r\n  useEffect(() => {\r\n      axios.get('http://localhost:4000/api/users')\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        setstate(res.data.data);\r\n      })\r\n      .catch((e) => console.log(e));\r\n      setMsg('');\r\n  }, [reload]);\r\n\r\n  \r\n  const DelPost = (item_id) => {\r\n    axios.delete(\"http://localhost:4000/api/users/\" + item_id)\r\n      .then(\r\n        (res) => {\r\n          setReload(!reload);\r\n          setDelFlag(true);\r\n          setMsg('User was deleted successfully');\r\n        })\r\n      .catch((err) => console.log(err));\r\n    }\r\n  \r\n  const [show, setShow] = useState(true);\r\n\r\n  return (\r\n\r\n    // <>\r\n    // </>\r\n    // <Editable rows={state} cols={cols} tableName='Users' name='users' />\r\n    <UserEditable rows={state} cols={cols} />\r\n    // <Row className=\"mt-5\">\r\n    //   <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n    //   <Col lg={6} md={8} sm={10} xs={10}>\r\n    //     <ListGroup>\r\n    //       {delFlag ?\r\n    //         <Alert variant=\"success\" onClose={() => {setShow(false); setDelFlag(false)}} dismissible>\r\n    //           {msg}\r\n    //         </Alert>\r\n    //         : <span></span>}\r\n\r\n    //       <ListGroup.Item variant=\"primary\">\r\n    //         <Row className=\"col-headers\">\r\n    //           <Col>Name</Col>\r\n    //           <Col>Email</Col>\r\n    //           <Col>Actions</Col>\r\n    //         </Row>\r\n    //       </ListGroup.Item>\r\n\r\n    //       {state.map((item, ind) => (\r\n    //         <ListGroup.Item key={ind} variant=\"light\">\r\n    //           <Row>\r\n    //             <Col>{item.name}</Col>\r\n    //             <Col>{item.email}</Col>\r\n    //             <Col>\r\n    //               <Button \r\n    //                 variant=\"info\"\r\n    //                 size=\"sm\"\r\n    //                 as={Link}\r\n    //                 to={\"/single-user/\" + item._id}\r\n    //               >\r\n    //                 View\r\n    //               </Button>\r\n\r\n    //               <DeleteDialog handleDelete={DelPost} id={item._id}/>\r\n\r\n    //             </Col>\r\n    //           </Row>\r\n    //         </ListGroup.Item>\r\n    //       ))} \r\n    //     </ListGroup>\r\n    //   </Col>\r\n    //   <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n    // </Row>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\users\\SingleUser.js",[],"E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\users\\Add.js",[],"E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\posts\\Posts.js",["199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217"],"E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\posts\\SinglePost.js",["218","219","220","221","222","223","224","225","226","227"],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ListGroup, Row, Col, Button } from \"react-bootstrap\";\r\nimport { TextField, InputAdornment, IconButton } from '@material-ui/core'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//   disabled: {\r\n//     color: \"black\",\r\n//     borderBottom: 0,\r\n//     \"&:before\": {\r\n//       borderBottom: 0\r\n//     }\r\n//   },\r\n// }));\r\nconst SinglePost = () => {\r\n  const { id } = useParams();\r\n  const [post, setPost] = useState(null);\r\n\r\n  // for edit\r\n  let [title, setTitle] = useState('');\r\n  let [body, setBody] = useState('');\r\n  let [image, setImage] = useState('');\r\n  \r\n  // const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:4000/api/posts/\" + id)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setPost(data.data); \r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [id]);\r\n  console.log(title, body, image);\r\n\r\n  // update\r\n  // const handleEdit = () => {\r\n  //   const editTitle = prompt(\"new title\", post?.title);\r\n  //   setPost({\r\n  //     title: editTitle,\r\n  //   })\r\n  //   console.log(post);\r\n  // } \r\n\r\n  // let [mouseEnter, setMouseEnter] = useState(false);\r\n  // let [editMode, setEditMode] = useState(false);\r\n\r\n  return (\r\n    <Row className=\"mt-5\">\r\n      <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n      <Col lg={6} md={8} sm={10} xs={10}>\r\n        <ListGroup>\r\n          <ListGroup.Item variant=\"primary\" className=\"col-headers\">\r\n            Selected Post Information\r\n          </ListGroup.Item>\r\n          <ListGroup.Item variant=\"light\">\r\n            <Row>\r\n              <Col className=\"col-headers\">ID</Col>\r\n              <Col>{post?._id}</Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"col-headers\">Title</Col>\r\n              <Col>{post?.title}</Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"col-headers\">Body</Col>\r\n              <Col>{post?.body}</Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"col-headers\">Image</Col>\r\n              <Col><img src={post?.image} width='100px'/></Col>\r\n            </Row>\r\n\r\n            {/* <TextField\r\n              // defaultValue={post?.title}\r\n              value={title}\r\n              margin=\"normal\"\r\n              onChange={(e)=>setTitle(e.target.value)}\r\n              // disabled={!editMode}\r\n              // className={classes.textField}\r\n              onMouseEnter={() => {setMouseEnter(true); }}\r\n              onMouseLeave={() => {setMouseEnter(false); }}\r\n              InputProps={{\r\n                // classes: {\r\n                //   disabled: classes.disabled\r\n                // },\r\n               \r\n                endAdornment: mouseEnter ? (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton onClick={() => setEditMode(true) } >\r\n                      <EditIcon />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ) : (\r\n                  \"\"\r\n                )\r\n                \r\n          }}\r\n        /> */}\r\n\r\n{/* \r\n            <Row className=\"my-2\">\r\n                <Col className=\"text-center\">\r\n                  <Button type='submit' variant=\"info\" size=\"md\">\r\n                    Done\r\n                  </Button>\r\n                </Col>\r\n            </Row> */}\r\n\r\n            \r\n            <Row className=\"my-2\">\r\n                <Col className=\"text-center\">\r\n                  <Button variant=\"info\"\r\n                    size=\"sm\"\r\n                    as={Link}\r\n                    to={\"/edit-post/\" + post?._id}>\r\n                      Edit\r\n                  </Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n      </Col>\r\n      <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default SinglePost;\r\n","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\posts\\EditPost.js",["228","229","230","231","232","233","234","235","236","237","238"],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ListGroup, Row, Col, Button } from \"react-bootstrap\";\r\nimport { TextField, InputAdornment, IconButton } from '@material-ui/core'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport FileBase64 from 'react-file-base64';\r\nimport axios from \"axios\";\r\n\r\nconst EditPost = () => {\r\n  const { id } = useParams();\r\n  const [post, setPost] = useState(null);\r\n\r\n  // for edit\r\n  let [title, setTitle] = useState('');\r\n  let [body, setBody] = useState('');\r\n  let [image, setImage] = useState('');\r\n  let [user, setUser] = useState('');\r\n\r\n\r\n  // update\r\n  const handleEdit = (e) => {\r\n    e.preventDefault()\r\n    let newPost = {title, body ,image}\r\n    console.log(newPost)\r\n    axios.post('http://localhost:4000/api/posts/update/'+id, newPost)\r\n    .then(res => console.log(res))\r\n    .catch(err => console.log(err, 'error'));\r\n  } \r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:4000/api/posts/\" + id)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setUser(data.data); \r\n        setTitle(data.data.title);\r\n        setBody(data.data.body);\r\n        setImage(data.data.image);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [id]);\r\n\r\n  \r\n\r\n  return (\r\n    <form onSubmit={handleEdit}>\r\n    <Row className=\"mt-5\">\r\n      <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n      <Col lg={6} md={8} sm={10} xs={10}>\r\n        <ListGroup>\r\n          <ListGroup.Item variant=\"primary\" className=\"col-headers\">\r\n            Selected Post Information\r\n          </ListGroup.Item>\r\n          <ListGroup.Item variant=\"light\">\r\n            {/* <Row>\r\n              <Col className=\"col-headers\">ID</Col>\r\n              <Col>{post?._id}</Col>\r\n            </Row> */}\r\n            <Row>\r\n              <Col className=\"col-headers\">Title</Col>\r\n              <Col>\r\n                <input type='text' value={title} \r\n                  onChange={e => setTitle(e.target.value)} \r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"col-headers\">Body</Col>\r\n              <Col>\r\n                <textarea type='text' value={body} rows='5' style={{width:'100%'}}\r\n                  onChange={e => setBody(e.target.value)}                \r\n                ></textarea>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"col-headers\">Image</Col>\r\n              <Col><img src={image} width='100px'/>\r\n              <FileBase64\r\n                    multiple={false}\r\n                    onDone={({base64})=>setImage(base64)}>\r\n\r\n              </FileBase64></Col>\r\n            </Row>\r\n\r\n            \r\n\r\n            <Row className=\"my-2\">\r\n                <Col className=\"text-center\">\r\n                  <Button type='submit' variant=\"info\" size=\"md\">\r\n                    Done\r\n                  </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            \r\n            {/* <Row className=\"my-2\">\r\n                <Col className=\"text-center\">\r\n                  <Button variant=\"info\"\r\n                    size=\"sm\"\r\n                    as={Link}\r\n                    to={\"/edit-post/\" + post?._id}>\r\n                      Edit\r\n                  </Button>\r\n                </Col>\r\n            </Row> */}\r\n            \r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n      </Col>\r\n      <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n    </Row>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditPost;\r\n","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\posts\\SinglePostHome.js",["239","240","241","242"],"import React from 'react'\r\nimport { Typography, Grid, CardContent, Card, CardActions, Button, Divider } from '@material-ui/core';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nfunction SinglePostHome() {\r\n\r\n  const { id } = useParams();\r\n  const [post, setPost] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    fetch(\"http://localhost:4000/api/posts/\" + id)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setPost(data.data); \r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [id]);\r\n\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item sm={12} md={8} lg={8} classname=''>\r\n\r\n                <Card className='single'>\r\n                    <CardContent>\r\n                        <Typography classname='single-title' variant=\"h3\" gutterBottom>\r\n                            {post?.title}\r\n                        </Typography>\r\n                        <Divider />\r\n                        <img src={post?.image} className='single-img'/>\r\n                        <Typography variant=\"body1\" gutterBottom>\r\n                            {post?.body}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    {/* <CardActions>\r\n                        <Button size=\"small\">Learn More</Button>\r\n                    </CardActions> */}\r\n                    </Card>\r\n            </Grid>\r\n\r\n            <Grid className='other-div' item sm={12} md={4} lg={4}>\r\n                Other section\r\n            </Grid>\r\n            \r\n        </Grid>\r\n            \r\n        \r\n    )\r\n}\r\n\r\nexport default SinglePostHome\r\n","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\posts\\AddPost.js",["243","244"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, ListGroup, Row, Col } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport FileBase64 from \"react-file-base64\";\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction AddPost() {\r\nconst [body, setBody] = useState('');\r\nconst [title, setTitle] = useState('');\r\nconst [image, setImage] = useState('');\r\n\r\n// for auth-token\r\n// const [checkOnlineUser, setcheckOnlineUser] = useState('')\r\nconst [token, settoken] = useState(null);\r\nconst [name, setname] = useState(null);\r\n\r\nconst history = useHistory();\r\n\r\nuseEffect(() => {\r\n  const checkOnlineUser = JSON.parse(localStorage.getItem(\"userData\"));\r\n  console.log(checkOnlineUser);\r\n  if(checkOnlineUser === null){\r\n    history.push('/signin')\r\n  }\r\n  else{\r\n    let { token, name } = checkOnlineUser\r\n    settoken(token);\r\n    if(!token) \r\n      history.push('/signin');\r\n    setname(name);\r\n\r\n  }\r\n  \r\n}, [])\r\n  \r\nconst handleSubmit=(e)=>{\r\n  e.preventDefault();\r\n  let post = {\r\n        title,\r\n        body,\r\n        image,\r\n  };\r\n  // console.log(user);\r\n  \r\n  axios.post('http://localhost:4000/api/posts', post, {    \r\n      headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token \r\n      }   \r\n    })\r\n    .then(res => {\r\n      console.log(res.data);\r\n      history.push('/posts');\r\n    })\r\n    .catch(err=>console.log(err,'error'));\r\n\r\n\r\n}\r\n\r\n  return (\r\n    // encType='multipart/form-data'\r\n    <form onSubmit={handleSubmit} >\r\n      <Row className=\"mt-5\" >\r\n        <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n        <Col lg={6} md={8} sm={10} xs={10}>\r\n          <ListGroup>\r\n            <ListGroup.Item variant=\"primary\" className=\"col-headers\">\r\n              Add New Post\r\n            </ListGroup.Item>\r\n            <ListGroup.Item variant=\"light\">\r\n              <Row>\r\n                <Col sm={12} md={3} className=\"col-headers\">Title</Col>\r\n                <Col sm={12} md={9} >\r\n                  <input \r\n                    type=\"text\"\r\n                    name='name' \r\n                    onChange={(e)=>setTitle(e.target.value)} />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col sm={12} md={3}  className=\"col-headers\">Body</Col>\r\n                <Col sm={12} md={9}>\r\n                  <textarea \r\n                    rows='5'\r\n                    style={{width: '100%'}} \r\n                    type=\"text\" name='body' \r\n                    onChange={(e)=>setBody(e.target.value)} >\r\n                  </textarea>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col sm={12} md={3}  className=\"col-headers\">Image</Col>\r\n                <Col sm={12} md={9}>\r\n                  <FileBase64\r\n                    multiple={false}\r\n                    onDone={({base64})=>setImage(base64)}>\r\n\r\n                  </FileBase64>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"my-2\">\r\n                <Col className=\"text-center\">\r\n                  <Button type='submit' variant=\"info\" size=\"md\">\r\n                    Add Post\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n      </Row>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddPost;\r\n","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\tables\\tableIcons.js",[],"E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\users\\AddDialog.js",["245","246"],"import React, { useState, useEffect } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Dialog, DialogActions, DialogContent } from \"@material-ui/core\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid, TextField, Divider } from \"@material-ui/core\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\n// //////////////////////////////////////////////////////////////////////////////\r\n\r\nexport default function AddDialog(props) {\r\n  // console.log(props);\r\n\r\n  let { \r\n    open, setOpen, handleClose\r\n  } = props\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pwd, setPwd] = useState(\"\");\r\n\r\n  // to show pwd\r\n  const [showPwd, setShowPwd] = useState(false);\r\n  const handleClickShowPassword = () => {\r\n    setShowPwd(!showPwd);\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  // for alert if email already exists\r\n  const [unique, setUnique] = useState(true);\r\n\r\n  // submit new user\r\n  const handleSubmit = (e) => {\r\n    // e.preventDefault();\r\n    let user = { name, email, pwd };\r\n    // console.log(user)\r\n    axios\r\n      .post(\"http://localhost:4000/api/users\", user)\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        setUnique(res.data.unique);\r\n        if (unique) console.log(\"Email created\");\r\n        else console.log(\"Email already exists\");\r\n        history.push(\"/users\");\r\n      })\r\n      .catch((err) => console.log(err, \"error\"));\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullWidth={true}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle\r\n          id=\"customized-dialog-title\"\r\n          onClose={handleClose}\r\n        >\r\n          Add User Information\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <form onSubmit={handleSubmit}>\r\n            <Grid\r\n              className=\"signup-inputs\"\r\n              container\r\n              spacing={1}\r\n              alignItems=\"flex-end\"\r\n            >\r\n              <Grid item xs={1}>\r\n                <PersonIcon className=\"icon\" />\r\n              </Grid>\r\n              <Grid item xs={11}>\r\n                <TextField\r\n                  label=\"Username\"\r\n                  className=\"input-textfield\"\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid\r\n              className=\"signup-inputs\"\r\n              container\r\n              spacing={1}\r\n              alignItems=\"flex-end\"\r\n            >\r\n              <Grid item xs={1}>\r\n                <EmailIcon className=\"icon\" />\r\n              </Grid>\r\n              <Grid item xs={11}>\r\n                <TextField\r\n                  className=\"input-textfield\"\r\n                  label=\"Email\"\r\n                  type=\"email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid\r\n              className=\"signup-inputs\"\r\n              container\r\n              spacing={1}\r\n              alignItems=\"flex-end\"\r\n            >\r\n              <Grid item xs={1}>\r\n                <LockIcon className=\"icon\" />\r\n              </Grid>\r\n              <Grid item xs={11}>\r\n                <TextField\r\n                  className=\"input-textfield\"\r\n                  label=\"Password\"\r\n                  type={showPwd ? 'text' : 'password'}\r\n                  onChange={(e) => setPwd(e.target.value)}\r\n                  InputProps={{\r\n                    endAdornment: <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      className='icon'\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      // onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {showPwd ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <DialogActions>\r\n              <Button className=\"submit\" autoFocus type=\"submit\">\r\n                Add\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\posts\\PostHome.js",["247","248","249","250","251","252","253","254","255","256","257","258","259","260","261"],"import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ListGroup, Row, Col, Button, Alert, Container } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport DeleteDialog from \"./DeleteDialog\";\r\nimport { Card } from 'react-bootstrap';\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nfunction PostHome() {\r\n  const [state, setstate] = useState([]);\r\n\r\n  // to change for useefffect whenever deletes\r\n  const [reload, setReload] = useState(false);\r\n\r\n  const [msg, setMsg] = useState('');\r\n  const [delFlag, setDelFlag] = useState(false);\r\n//   let [shortDesc, setShort] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n      axios.get('http://localhost:4000/api/posts')\r\n      .then((res) => {\r\n        console.log(res.data.data);\r\n        setstate(res.data.data);\r\n      })\r\n      .catch((e) => console.log(e));\r\n      setMsg('');\r\n  }, [reload]);\r\n\r\n//   const DelPost = (item_id) => {\r\n\r\n//   axios.delete(\"http://localhost:4000/api/posts/\" + item_id)\r\n//     .then(\r\n//       (res) => {\r\n//         setReload(!reload);\r\n//         setDelFlag(true);\r\n//         setMsg('Post was deleted successfully');\r\n        \r\n//       })\r\n//     .catch((err) => console.log(err));\r\n//   }\r\n//   if (state.length>1)\r\n//     setShort(state.body.splice(0,250));\r\n  \r\n  const [show, setShow] = useState(true);\r\n\r\n\r\n  return (\r\n    <>\r\n        {/* <Container fluid>\r\n            <Row>\r\n\r\n            </Row>\r\n        </Container> */}\r\n        <Grid container spacing={1}>\r\n            \r\n            <Grid className='post-div' item sm={12} md={8} lg={8}>\r\n                {state.map ((item, ind) => (\r\n                    <Card key={ind} className=\"text-left single-post-div\">\r\n                    <Card.Header className='title'>\r\n                        <Card.Title>{item.title}</Card.Title>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={4} lg={4}  className='post-img-div'>\r\n                                <img className='post-img' src={item.image}/>\r\n                            </Grid>\r\n                            <Grid item xs={8} lg={8}>\r\n                                <Card.Text>\r\n                                    {item.body.slice(0,100)}\r\n                                </Card.Text>\r\n                            </Grid>\r\n                        </Grid>\r\n                        \r\n                        <Button className='submit' as={Link}\r\n                            to={\"/single-post-home/\" + item._id}>\r\n                        Continue reading\r\n                        </Button>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\">Posted date: dd-mm-yy</Card.Footer>\r\n                    </Card>\r\n                ))}\r\n                \r\n            </Grid>\r\n\r\n            <Grid className='other-div' item sm={12} md={4} lg={4}>\r\n                Other section\r\n            </Grid>\r\n        </Grid>\r\n        \r\n    {/* <Row className=\"mt-5\">\r\n      <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n      <Col lg={6} md={8} sm={10} xs={10}>\r\n        <ListGroup>\r\n          {delFlag ?\r\n            <Alert variant=\"success\" onClose={() => {setShow(false); setDelFlag(false)}} dismissible>\r\n              Post was deleted successfully\r\n            </Alert>\r\n            : <span></span>}\r\n\r\n          <ListGroup.Item variant=\"primary\">\r\n            <Row className=\"col-headers\">\r\n              <Col>Title</Col>\r\n              <Col>Body</Col>\r\n              <Col>Photo</Col>\r\n              <Col>Actions</Col>\r\n            </Row>\r\n          </ListGroup.Item>\r\n\r\n          {state.map((item, ind) => (\r\n            <ListGroup.Item key={ind} variant=\"light\">\r\n              <Row>\r\n                <Col>{item.title}</Col>\r\n                <Col>{item.body}</Col>\r\n                <Col><img width='100px' src={item.image}/></Col>\r\n\r\n                <Col>\r\n                  <Button \r\n                    variant=\"info\"\r\n                    size=\"sm\"\r\n                    as={Link}\r\n                    to={\"/single-post/\" + item._id}\r\n                  >\r\n                    View\r\n                  </Button>\r\n                  &nbsp; &nbsp;\r\n\r\n                  <DeleteDialog handleDelete={DelPost} id={item._id}/>\r\n                  \r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n          ))} \r\n        </ListGroup>\r\n      </Col>\r\n      <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n    </Row> */}\r\n\r\n  \r\n    \r\n    \r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PostHome;\r\n","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\users\\DeleteDialog.js",[],"E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\posts\\DeleteDialog.js",[],"E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\authorization\\Signin.js",["262","263","264","265","266","267","268","269","270","271","272","273","274"],"E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\authorization\\SignOut.js",["275","276","277"],"E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\authorization\\Signup.js",["278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293"],"import React, { useState, useEffect } from 'react';\r\nimport Password from './Password';\r\nimport { Grid, TextField, InputAdornment, Typography, Button} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//       '& > *': {\r\n//         margin: theme.spacing(1),\r\n//         width: '25ch',\r\n//       },\r\n//     },\r\n\r\n    \r\n//   }));\r\n\r\nfunction Signup() {\r\n\r\n    // const classes = useStyles();\r\n    const [name,setName] = useState('');\r\n    const [email,setEmail] = useState('');\r\n    const [pwd,setPwd] = useState('');\r\n    \r\n    const history = useHistory();\r\n    // to check single user and no repeat\r\n    const [unique, setUnique] = useState(false);\r\n    const [msg, setMsg] = useState('');\r\n    const [show, setShow] = useState(true);\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let user = {name, email, pwd};\r\n        // console.log(user)\r\n            axios.post('http://localhost:4000/api/users', user)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                // setUnique(res.data.unique);\r\n                // if(unique)\r\n                    history.push('/users');\r\n                // else\r\n                //     setMsg('Email already exists');\r\n                \r\n            })\r\n            .catch(err=>console.log(err,'error'));\r\n    }\r\n    // console.log(unique)\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={3}>\r\n                \r\n                <Grid item xs={1} md={2} lg={3}>\r\n                </Grid>\r\n                \r\n                <Grid item xs={10} md={8} lg={6} className='form-container' >\r\n                    <Typography variant='h4' className='title' >Sign Up</Typography>\r\n                    \r\n                    {/* {unique ? \r\n                    <span></span> : \r\n                    <Alert variant=\"danger\" onClose={() => {setShow(false); setUnique(false)}} dismissible>\r\n                        {msg}\r\n                    </Alert>} */}\r\n\r\n                    <form className='signup-form' onSubmit={handleSubmit} >\r\n\r\n                    \r\n                    \r\n\r\n                    <Grid className='signup-inputs' container spacing={1} alignItems=\"flex-end\">\r\n                        <Grid className='' item sm={1} md={1}>\r\n                            <PersonIcon className='icon'/>\r\n                        </Grid>\r\n                        <Grid  className='input-container' item sm={10} md={6}>\r\n                            <TextField label=\"Username\" className='input-textfield'\r\n                            onChange={(e)=>setName(e.target.value)} />\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid className='signup-inputs' container spacing={1} alignItems=\"flex-end\">\r\n                        <Grid item sm={1} md={1}>\r\n                            <EmailIcon className='icon' />\r\n                        </Grid>\r\n                        <Grid item item sm={10} md={6}>\r\n                            <TextField className='input-textfield' label=\"Email\" type='email'\r\n                            onChange={(e)=>setEmail(e.target.value)} />\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid className='signup-inputs' container spacing={1} alignItems=\"flex-end\">\r\n                        <Grid item sm={1} md={1}>\r\n                            <LockIcon className='icon' />\r\n                        </Grid>\r\n                        <Grid item item sm={10} md={6}>\r\n                            <TextField className='input-textfield' label=\"Password\"  type='password'\r\n                            onChange={(e)=>setPwd(e.target.value)} />\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid className='signup-inputs' container spacing={1} alignItems=\"flex-end\">\r\n                        <Grid item item sm={10} md={6}>\r\n                           <Button type='submit' variant='contained' className='submit'>Sign up</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid className='signup-inputs' container spacing={1} alignItems=\"flex-end\">\r\n                        <Grid item item sm={10} md={6}>\r\n                            Already have an account? Sign in <a href=''>here</a>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n\r\n\r\n                    {/* to unchange width and center effects of form back to original*/}\r\n                    {/* <Grid className='signup-input' container spacing={1} alignItems=\"flex-end\">\r\n                        <Grid item>\r\n                            <LockIcon />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <TextField label=\"Password\" />\r\n                        </Grid>\r\n                    </Grid> */}\r\n\r\n                    </form>\r\n                </Grid>\r\n                \r\n                <Grid item xs={1} md={2} lg={3}>\r\n                {/* <Password /> */}\r\n                </Grid>\r\n\r\n            </Grid>\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\authorization\\Password.js",[],"E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\tables\\UserEditable.js",["294","295","296","297","298","299","300","301","302","303"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { tableIcons } from \"./tableIcons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  InputAdornment,\r\n  Typography,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddDialog from \"../users/AddDialog\";\r\nimport EditDialog from \"../users/EditDialog\";\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\n// ////////////////////////////////////////////////////////////////////////////////////////\r\nfunction UserEditable({rows, cols}) {\r\n  const classes = useStyles();\r\n\r\n  // table column data\r\n  const [columns, setColumns] = useState([]);\r\n  // table row data\r\n  const [data, setData] = useState([]);\r\n\r\n  // for edit\r\n  const [editData, setEditData] = useState('');\r\n\r\n  useEffect(() => {\r\n    setData(rows);\r\n    setColumns(cols);\r\n  }, [rows]);\r\n\r\n  // for add dialog box\r\n  const [addOpen, setAddOpen] = useState(false);\r\n\r\n  const handleAddOpen = () => {\r\n    setAddOpen(true);\r\n  };\r\n  const handleAddClose = () => {\r\n    setAddOpen(false);\r\n  };\r\n\r\n  // for edit dialog box\r\n  const [editOpen, setEditOpen] = useState(false);\r\n\r\n  const handleEditOpen = (data) => {\r\n    //   console.log(data);\r\n      setEditData(data);\r\n    setEditOpen(true);\r\n\r\n  };\r\n  const handleEditClose = () => {\r\n    setEditOpen(false);\r\n  };\r\n\r\n\r\n\r\n\r\n  // delete\r\n  const handleDelete = (data) => {\r\n    console.log(data);\r\n    let row_id = data._id;\r\n    axios.delete(`http://localhost:4000/api/users/${row_id}`)\r\n    .then(\r\n      res => {\r\n        console.log('deleted successfully')\r\n      }\r\n    )\r\n    .catch(\r\n      e => console.log(e)\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AddDialog\r\n        open={addOpen}\r\n        setOpen={setAddOpen}\r\n        handleClose={handleAddClose}\r\n      />\r\n\r\n      <EditDialog \r\n        open={editOpen}\r\n        setOpen={setEditOpen}\r\n        handleClose={handleEditClose}\r\n        oldData={editData}\r\n      />\r\n      \r\n\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title={`All Users Information`}\r\n        columns={columns}\r\n        data={data}\r\n        actions={[\r\n          {\r\n            icon: tableIcons.Add,\r\n            tooltip: \"Add User\",\r\n            isFreeAction: true,\r\n            onClick: handleAddOpen,\r\n          },\r\n          rowData => ({\r\n              icon: tableIcons.Edit,\r\n              tooltip: 'Edit',\r\n              onClick: () => handleEditOpen(rowData),\r\n          })\r\n        ]}\r\n        options={{\r\n          headerStyle: {\r\n            // backgroundColor: \"#5ddef4\",\r\n\r\n            // backgroundColor: '#ff9e80',\r\n\r\n            color: \"#00\",\r\n            fontSize: \"18px\",\r\n            fontWeight: 'bold'\r\n          },\r\n          actionsColumnIndex: -1,\r\n          addRowPosition: 'last',\r\n        }}\r\n        editable={{\r\n        //   onRowUpdate: (newData, oldData) =>\r\n        //     new Promise((resolve, reject) => {\r\n        //       setTimeout(() => {\r\n        //         const dataUpdate = [...data];\r\n        //         const index = oldData.tableData.id;\r\n        //         dataUpdate[index] = newData;\r\n        //         setData([...dataUpdate]);\r\n        //         handleEdit(newData, oldData);\r\n        //         resolve();\r\n        //       }, 1000);\r\n        //     }),\r\n          onRowDelete: (oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n                handleDelete(oldData);\r\n                resolve();\r\n              }, 1000);\r\n            }),\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserEditable;\r\n","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\users\\EditDialog.js",["304","305"],"import React, { useState, useEffect } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Dialog, DialogActions, DialogContent } from \"@material-ui/core\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid, TextField, Divider } from \"@material-ui/core\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\n// //////////////////////////////////////////////////////////////////////////////\r\n\r\nexport default function EditDialog(props) {\r\n  // console.log(props);\r\n\r\n  let {  \r\n    open, setOpen, handleClose,\r\n    oldData,\r\n  } = props;\r\n\r\n  // console.log(oldData);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [pwd, setPwd] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  // // for alert if email already exists\r\n  // const [unique, setUnique] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:4000/api/users/\" + oldData._id)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data.data)\r\n        setName(data.data.name);\r\n        setPwd(data.data.pwd);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [oldData._id]);\r\n\r\n  // edit  user\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let updated = { name, pwd };\r\n    console.log(oldData._id);\r\n    axios.post(\"http://localhost:4000/api/users/edit/\"+oldData._id, updated)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        // setUnique(res.data.unique);\r\n        // if (unique) console.log(\"Email created\");\r\n        // else console.log(\"Email already exists\");\r\n        history.push(\"/users\");\r\n      })\r\n      .catch((err) => console.log(err, \"error\"));\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullWidth={true}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle\r\n          id=\"customized-dialog-title\"\r\n          onClose={handleClose}\r\n        >\r\n          Edit User Information\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <form onSubmit={handleSubmit}>\r\n            <Grid\r\n              className=\"signup-inputs\"\r\n              container\r\n              spacing={1}\r\n              alignItems=\"flex-end\"\r\n            >\r\n              <Grid item xs={1}>\r\n                <PersonIcon className=\"icon\" />\r\n              </Grid>\r\n              <Grid item xs={11}>\r\n                <TextField\r\n                  defaultValue={oldData.name}\r\n                  label=\"Username\"\r\n                  className=\"input-textfield\"\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* <Grid\r\n              className=\"signup-inputs\"\r\n              container\r\n              spacing={1}\r\n              alignItems=\"flex-end\"\r\n            >\r\n              <Grid item xs={1}>\r\n                <EmailIcon className=\"icon\" />\r\n              </Grid>\r\n              <Grid item xs={11}>\r\n                <TextField\r\n                  className=\"input-textfield\"\r\n                  label=\"Email\"\r\n                  type=\"email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid> */}\r\n\r\n            <Grid\r\n              className=\"signup-inputs\"\r\n              container\r\n              spacing={1}\r\n              alignItems=\"flex-end\"\r\n            >\r\n              <Grid item xs={1}>\r\n                <LockIcon className=\"icon\" />\r\n              </Grid>\r\n              <Grid item xs={11}>\r\n                <TextField\r\n                  defaultValue={oldData.pwd}\r\n                  className=\"input-textfield\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  onChange={(e) => setPwd(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <DialogActions>\r\n              <Button className=\"submit\" autoFocus type=\"submit\">\r\n                Edit\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\tables\\PostEditable.js",["306","307","308","309","310","311","312","313","314","315","316"],"E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\posts\\AddDialog.js",["317","318","319","320","321"],"E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\posts\\EditDialog.js",["322","323","324","325","326"],"import React, { useState, useEffect } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Dialog, DialogActions, DialogContent } from \"@material-ui/core\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid, TextField, Divider } from \"@material-ui/core\";\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport axios from \"axios\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport FileBase64 from 'react-file-base64';\r\n\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\n// ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport default function EditDialog(props) {\r\n  // console.log(props);\r\n  let { id } = useParams();\r\n  let {  \r\n    open, setOpen, handleClose,\r\n    oldData,\r\n  } = props;\r\n\r\n  // console.log(oldData);\r\n\r\n  let [title, setTitle] = useState('');\r\n  let [body, setBody] = useState('');\r\n  let [image, setImage] = useState('');\r\n  let [post, setPost] = useState('');\r\n\r\n  const history = useHistory();\r\n\r\n  // // for alert if email already exists\r\n  // const [unique, setUnique] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:4000/api/posts/\" + oldData._id)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data.data)\r\n        setTitle(data.data.title);\r\n        setBody(data.data.body);\r\n        setImage(data.data.image);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [oldData._id]);\r\n\r\n  // edit  user\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let updated = { ...oldData, title, body, image,       \r\n      updatedAt: new Date(),\r\n     };\r\n    console.log(updated);\r\n    axios.put(\"http://localhost:4000/api/posts/edit/\"+oldData._id, updated)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        // setUnique(res.data.unique);\r\n        // if (unique) console.log(\"Email created\");\r\n        // else console.log(\"Email already exists\");\r\n        history.push(\"/posts\");\r\n      })\r\n      .catch((err) => console.log(err, \"error\"));\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullWidth={true}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle\r\n          id=\"customized-dialog-title\"\r\n          onClose={handleClose}\r\n        >\r\n          Edit Post\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <form onSubmit={handleSubmit}>\r\n            <Grid\r\n              className=\"signup-inputs\"\r\n              container\r\n              spacing={1}\r\n              alignItems=\"flex-end\"\r\n            >\r\n              <Grid item xs={1}>\r\n                <TextFieldsIcon className=\"icon\" />\r\n              </Grid>\r\n              <Grid item xs={11}>\r\n                <TextField\r\n                  defaultValue={oldData.title}\r\n                  label=\"Title\"\r\n                  className=\"input-textfield\"\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* <Grid\r\n              className=\"signup-inputs\"\r\n              container\r\n              spacing={1}\r\n              alignItems=\"flex-end\"\r\n            >\r\n              <Grid item xs={1}>\r\n                <EmailIcon className=\"icon\" />\r\n              </Grid>\r\n              <Grid item xs={11}>\r\n                <TextField\r\n                  className=\"input-textfield\"\r\n                  label=\"Email\"\r\n                  type=\"email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid> */}\r\n\r\n            <Grid\r\n              className=\"signup-inputs\"\r\n              container\r\n              spacing={1}\r\n              alignItems=\"flex-end\"\r\n            >\r\n              <Grid item xs={1}>\r\n                <SubjectIcon className=\"icon\" />\r\n              </Grid>\r\n              <Grid item xs={11}>\r\n                <TextField\r\n                  defaultValue={oldData.body}\r\n                  className=\"input-textfield\"\r\n                  label=\"Body\"\r\n                  multiline rows={4}\r\n                  onChange={(e) => setBody(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid\r\n              className=\"signup-inputs\"\r\n              container\r\n              spacing={1}\r\n              alignItems=\"flex-end\"\r\n            >\r\n              <Grid item xs={1}>\r\n                <ImageIcon className=\"icon\" />\r\n              </Grid>\r\n              <Grid item xs={11}>\r\n                <img src={oldData.image} width='100px'/>\r\n                <FileBase64\r\n                    multiple={false}\r\n                    onDone={({base64})=>setImage(base64)}>\r\n                </FileBase64>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <DialogActions>\r\n              <Button className=\"submit\" autoFocus type=\"submit\">\r\n                Edit\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","E:\\navttc-saylani\\final-mernapp\\client\\src\\contexts\\AuthContext.js",["327"],"E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\PrivateRoute.js",[],"E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\AdminHeader.js",[],"E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\GeneralHeader.js",[],"E:\\navttc-saylani\\final-mernapp\\client\\src\\components\\LoggedHeader.js",[],{"ruleId":"328","severity":1,"message":"329","line":6,"column":8,"nodeType":"330","messageId":"331","endLine":6,"endColumn":16},{"ruleId":"332","replacedBy":"333"},{"ruleId":"334","replacedBy":"335"},{"ruleId":"328","severity":1,"message":"336","line":2,"column":50,"nodeType":"330","messageId":"331","endLine":2,"endColumn":54},{"ruleId":"328","severity":1,"message":"337","line":18,"column":8,"nodeType":"330","messageId":"331","endLine":18,"endColumn":18},{"ruleId":"328","severity":1,"message":"338","line":2,"column":25,"nodeType":"330","messageId":"331","endLine":2,"endColumn":38},{"ruleId":"328","severity":1,"message":"339","line":6,"column":3,"nodeType":"330","messageId":"331","endLine":6,"endColumn":7},{"ruleId":"328","severity":1,"message":"340","line":7,"column":3,"nodeType":"330","messageId":"331","endLine":7,"endColumn":12},{"ruleId":"328","severity":1,"message":"341","line":8,"column":3,"nodeType":"330","messageId":"331","endLine":8,"endColumn":17},{"ruleId":"328","severity":1,"message":"342","line":9,"column":3,"nodeType":"330","messageId":"331","endLine":9,"endColumn":13},{"ruleId":"328","severity":1,"message":"343","line":10,"column":3,"nodeType":"330","messageId":"331","endLine":10,"endColumn":9},{"ruleId":"328","severity":1,"message":"344","line":13,"column":10,"nodeType":"330","messageId":"331","endLine":13,"endColumn":20},{"ruleId":"328","severity":1,"message":"345","line":20,"column":10,"nodeType":"330","messageId":"331","endLine":20,"endColumn":23},{"ruleId":"328","severity":1,"message":"346","line":43,"column":9,"nodeType":"330","messageId":"331","endLine":43,"endColumn":16},{"ruleId":"347","severity":1,"message":"348","line":53,"column":6,"nodeType":"349","endLine":53,"endColumn":12,"suggestions":"350"},{"ruleId":"351","severity":1,"message":"352","line":107,"column":21,"nodeType":"353","messageId":"354","endLine":107,"endColumn":23},{"ruleId":"355","severity":1,"message":"356","line":114,"column":21,"nodeType":"357","endLine":114,"endColumn":71},{"ruleId":"328","severity":1,"message":"336","line":2,"column":10,"nodeType":"330","messageId":"331","endLine":2,"endColumn":14},{"ruleId":"328","severity":1,"message":"358","line":3,"column":10,"nodeType":"330","messageId":"331","endLine":3,"endColumn":16},{"ruleId":"328","severity":1,"message":"359","line":3,"column":18,"nodeType":"330","messageId":"331","endLine":3,"endColumn":21},{"ruleId":"328","severity":1,"message":"360","line":12,"column":17,"nodeType":"330","messageId":"331","endLine":12,"endColumn":24},{"ruleId":"328","severity":1,"message":"361","line":12,"column":34,"nodeType":"330","messageId":"331","endLine":12,"endColumn":43},{"ruleId":"351","severity":1,"message":"352","line":18,"column":23,"nodeType":"353","messageId":"354","endLine":18,"endColumn":25},{"ruleId":"351","severity":1,"message":"352","line":18,"column":37,"nodeType":"353","messageId":"354","endLine":18,"endColumn":39},{"ruleId":"328","severity":1,"message":"362","line":3,"column":10,"nodeType":"330","messageId":"331","endLine":3,"endColumn":19},{"ruleId":"328","severity":1,"message":"363","line":3,"column":21,"nodeType":"330","messageId":"331","endLine":3,"endColumn":24},{"ruleId":"328","severity":1,"message":"364","line":3,"column":26,"nodeType":"330","messageId":"331","endLine":3,"endColumn":29},{"ruleId":"328","severity":1,"message":"365","line":3,"column":39,"nodeType":"330","messageId":"331","endLine":3,"endColumn":44},{"ruleId":"328","severity":1,"message":"366","line":3,"column":46,"nodeType":"330","messageId":"331","endLine":3,"endColumn":55},{"ruleId":"328","severity":1,"message":"344","line":5,"column":10,"nodeType":"330","messageId":"331","endLine":5,"endColumn":20},{"ruleId":"328","severity":1,"message":"367","line":5,"column":22,"nodeType":"330","messageId":"331","endLine":5,"endColumn":31},{"ruleId":"328","severity":1,"message":"368","line":8,"column":8,"nodeType":"330","messageId":"331","endLine":8,"endColumn":16},{"ruleId":"328","severity":1,"message":"369","line":14,"column":18,"nodeType":"330","messageId":"331","endLine":14,"endColumn":27},{"ruleId":"328","severity":1,"message":"370","line":16,"column":10,"nodeType":"330","messageId":"331","endLine":16,"endColumn":13},{"ruleId":"328","severity":1,"message":"371","line":28,"column":10,"nodeType":"330","messageId":"331","endLine":28,"endColumn":14},{"ruleId":"328","severity":1,"message":"372","line":28,"column":16,"nodeType":"330","messageId":"331","endLine":28,"endColumn":23},{"ruleId":"355","severity":1,"message":"356","line":46,"column":21,"nodeType":"357","endLine":46,"endColumn":66},{"ruleId":"328","severity":1,"message":"336","line":2,"column":10,"nodeType":"330","messageId":"331","endLine":2,"endColumn":14},{"ruleId":"328","severity":1,"message":"362","line":3,"column":10,"nodeType":"330","messageId":"331","endLine":3,"endColumn":19},{"ruleId":"328","severity":1,"message":"363","line":3,"column":21,"nodeType":"330","messageId":"331","endLine":3,"endColumn":24},{"ruleId":"328","severity":1,"message":"364","line":3,"column":26,"nodeType":"330","messageId":"331","endLine":3,"endColumn":29},{"ruleId":"328","severity":1,"message":"343","line":3,"column":31,"nodeType":"330","messageId":"331","endLine":3,"endColumn":37},{"ruleId":"328","severity":1,"message":"365","line":3,"column":39,"nodeType":"330","messageId":"331","endLine":3,"endColumn":44},{"ruleId":"328","severity":1,"message":"373","line":5,"column":8,"nodeType":"330","messageId":"331","endLine":5,"endColumn":20},{"ruleId":"328","severity":1,"message":"329","line":6,"column":8,"nodeType":"330","messageId":"331","endLine":6,"endColumn":16},{"ruleId":"328","severity":1,"message":"374","line":12,"column":16,"nodeType":"330","messageId":"331","endLine":12,"endColumn":23},{"ruleId":"328","severity":1,"message":"370","line":21,"column":10,"nodeType":"330","messageId":"331","endLine":21,"endColumn":13},{"ruleId":"328","severity":1,"message":"375","line":22,"column":10,"nodeType":"330","messageId":"331","endLine":22,"endColumn":17},{"ruleId":"328","severity":1,"message":"376","line":35,"column":9,"nodeType":"330","messageId":"331","endLine":35,"endColumn":16},{"ruleId":"328","severity":1,"message":"371","line":46,"column":10,"nodeType":"330","messageId":"331","endLine":46,"endColumn":14},{"ruleId":"328","severity":1,"message":"372","line":46,"column":16,"nodeType":"330","messageId":"331","endLine":46,"endColumn":23},{"ruleId":"328","severity":1,"message":"336","line":2,"column":10,"nodeType":"330","messageId":"331","endLine":2,"endColumn":14},{"ruleId":"328","severity":1,"message":"362","line":3,"column":10,"nodeType":"330","messageId":"331","endLine":3,"endColumn":19},{"ruleId":"328","severity":1,"message":"363","line":3,"column":21,"nodeType":"330","messageId":"331","endLine":3,"endColumn":24},{"ruleId":"328","severity":1,"message":"364","line":3,"column":26,"nodeType":"330","messageId":"331","endLine":3,"endColumn":29},{"ruleId":"328","severity":1,"message":"343","line":3,"column":31,"nodeType":"330","messageId":"331","endLine":3,"endColumn":37},{"ruleId":"328","severity":1,"message":"365","line":3,"column":39,"nodeType":"330","messageId":"331","endLine":3,"endColumn":44},{"ruleId":"328","severity":1,"message":"344","line":5,"column":10,"nodeType":"330","messageId":"331","endLine":5,"endColumn":20},{"ruleId":"328","severity":1,"message":"367","line":6,"column":10,"nodeType":"330","messageId":"331","endLine":6,"endColumn":19},{"ruleId":"328","severity":1,"message":"373","line":7,"column":8,"nodeType":"330","messageId":"331","endLine":7,"endColumn":20},{"ruleId":"328","severity":1,"message":"329","line":8,"column":8,"nodeType":"330","messageId":"331","endLine":8,"endColumn":16},{"ruleId":"328","severity":1,"message":"377","line":9,"column":8,"nodeType":"330","messageId":"331","endLine":9,"endColumn":11},{"ruleId":"328","severity":1,"message":"374","line":16,"column":16,"nodeType":"330","messageId":"331","endLine":16,"endColumn":23},{"ruleId":"355","severity":1,"message":"356","line":20,"column":26,"nodeType":"357","endLine":20,"endColumn":97},{"ruleId":"328","severity":1,"message":"378","line":27,"column":10,"nodeType":"330","messageId":"331","endLine":27,"endColumn":18},{"ruleId":"328","severity":1,"message":"370","line":33,"column":10,"nodeType":"330","messageId":"331","endLine":33,"endColumn":13},{"ruleId":"328","severity":1,"message":"375","line":34,"column":10,"nodeType":"330","messageId":"331","endLine":34,"endColumn":17},{"ruleId":"328","severity":1,"message":"379","line":34,"column":19,"nodeType":"330","messageId":"331","endLine":34,"endColumn":29},{"ruleId":"328","severity":1,"message":"371","line":35,"column":10,"nodeType":"330","messageId":"331","endLine":35,"endColumn":14},{"ruleId":"328","severity":1,"message":"372","line":35,"column":16,"nodeType":"330","messageId":"331","endLine":35,"endColumn":23},{"ruleId":"328","severity":1,"message":"340","line":4,"column":10,"nodeType":"330","messageId":"331","endLine":4,"endColumn":19},{"ruleId":"328","severity":1,"message":"341","line":4,"column":21,"nodeType":"330","messageId":"331","endLine":4,"endColumn":35},{"ruleId":"328","severity":1,"message":"380","line":4,"column":37,"nodeType":"330","messageId":"331","endLine":4,"endColumn":47},{"ruleId":"328","severity":1,"message":"381","line":5,"column":8,"nodeType":"330","messageId":"331","endLine":5,"endColumn":16},{"ruleId":"328","severity":1,"message":"344","line":6,"column":21,"nodeType":"330","messageId":"331","endLine":6,"endColumn":31},{"ruleId":"328","severity":1,"message":"382","line":7,"column":10,"nodeType":"330","messageId":"331","endLine":7,"endColumn":20},{"ruleId":"328","severity":1,"message":"383","line":24,"column":15,"nodeType":"330","messageId":"331","endLine":24,"endColumn":23},{"ruleId":"328","severity":1,"message":"384","line":25,"column":14,"nodeType":"330","messageId":"331","endLine":25,"endColumn":21},{"ruleId":"328","severity":1,"message":"385","line":26,"column":15,"nodeType":"330","messageId":"331","endLine":26,"endColumn":23},{"ruleId":"355","severity":1,"message":"356","line":75,"column":20,"nodeType":"357","endLine":75,"endColumn":58},{"ruleId":"328","severity":1,"message":"340","line":4,"column":10,"nodeType":"330","messageId":"331","endLine":4,"endColumn":19},{"ruleId":"328","severity":1,"message":"341","line":4,"column":21,"nodeType":"330","messageId":"331","endLine":4,"endColumn":35},{"ruleId":"328","severity":1,"message":"380","line":4,"column":37,"nodeType":"330","messageId":"331","endLine":4,"endColumn":47},{"ruleId":"328","severity":1,"message":"381","line":5,"column":8,"nodeType":"330","messageId":"331","endLine":5,"endColumn":16},{"ruleId":"328","severity":1,"message":"344","line":6,"column":21,"nodeType":"330","messageId":"331","endLine":6,"endColumn":31},{"ruleId":"328","severity":1,"message":"382","line":7,"column":10,"nodeType":"330","messageId":"331","endLine":7,"endColumn":20},{"ruleId":"328","severity":1,"message":"336","line":8,"column":10,"nodeType":"330","messageId":"331","endLine":8,"endColumn":14},{"ruleId":"328","severity":1,"message":"386","line":14,"column":10,"nodeType":"330","messageId":"331","endLine":14,"endColumn":14},{"ruleId":"328","severity":1,"message":"387","line":14,"column":16,"nodeType":"330","messageId":"331","endLine":14,"endColumn":23},{"ruleId":"328","severity":1,"message":"388","line":20,"column":8,"nodeType":"330","messageId":"331","endLine":20,"endColumn":12},{"ruleId":"355","severity":1,"message":"356","line":79,"column":20,"nodeType":"357","endLine":79,"endColumn":52},{"ruleId":"328","severity":1,"message":"389","line":2,"column":47,"nodeType":"330","messageId":"331","endLine":2,"endColumn":58},{"ruleId":"328","severity":1,"message":"343","line":2,"column":60,"nodeType":"330","messageId":"331","endLine":2,"endColumn":66},{"ruleId":"328","severity":1,"message":"344","line":4,"column":21,"nodeType":"330","messageId":"331","endLine":4,"endColumn":31},{"ruleId":"355","severity":1,"message":"356","line":31,"column":25,"nodeType":"357","endLine":31,"endColumn":72},{"ruleId":"328","severity":1,"message":"390","line":15,"column":8,"nodeType":"330","messageId":"331","endLine":15,"endColumn":12},{"ruleId":"347","severity":1,"message":"391","line":34,"column":4,"nodeType":"349","endLine":34,"endColumn":6,"suggestions":"392"},{"ruleId":"328","severity":1,"message":"393","line":1,"column":27,"nodeType":"330","messageId":"331","endLine":1,"endColumn":36},{"ruleId":"328","severity":1,"message":"394","line":9,"column":27,"nodeType":"330","messageId":"331","endLine":9,"endColumn":34},{"ruleId":"328","severity":1,"message":"362","line":3,"column":10,"nodeType":"330","messageId":"331","endLine":3,"endColumn":19},{"ruleId":"328","severity":1,"message":"363","line":3,"column":21,"nodeType":"330","messageId":"331","endLine":3,"endColumn":24},{"ruleId":"328","severity":1,"message":"364","line":3,"column":26,"nodeType":"330","messageId":"331","endLine":3,"endColumn":29},{"ruleId":"328","severity":1,"message":"365","line":3,"column":39,"nodeType":"330","messageId":"331","endLine":3,"endColumn":44},{"ruleId":"328","severity":1,"message":"366","line":3,"column":46,"nodeType":"330","messageId":"331","endLine":3,"endColumn":55},{"ruleId":"328","severity":1,"message":"344","line":5,"column":10,"nodeType":"330","messageId":"331","endLine":5,"endColumn":20},{"ruleId":"328","severity":1,"message":"367","line":6,"column":10,"nodeType":"330","messageId":"331","endLine":6,"endColumn":19},{"ruleId":"328","severity":1,"message":"373","line":7,"column":8,"nodeType":"330","messageId":"331","endLine":7,"endColumn":20},{"ruleId":"328","severity":1,"message":"369","line":15,"column":18,"nodeType":"330","messageId":"331","endLine":15,"endColumn":27},{"ruleId":"328","severity":1,"message":"370","line":17,"column":10,"nodeType":"330","messageId":"331","endLine":17,"endColumn":13},{"ruleId":"328","severity":1,"message":"375","line":18,"column":10,"nodeType":"330","messageId":"331","endLine":18,"endColumn":17},{"ruleId":"328","severity":1,"message":"379","line":18,"column":19,"nodeType":"330","messageId":"331","endLine":18,"endColumn":29},{"ruleId":"328","severity":1,"message":"371","line":47,"column":10,"nodeType":"330","messageId":"331","endLine":47,"endColumn":14},{"ruleId":"328","severity":1,"message":"372","line":47,"column":16,"nodeType":"330","messageId":"331","endLine":47,"endColumn":23},{"ruleId":"355","severity":1,"message":"356","line":68,"column":33,"nodeType":"357","endLine":68,"endColumn":77},{"ruleId":"328","severity":1,"message":"393","line":1,"column":27,"nodeType":"330","messageId":"331","endLine":1,"endColumn":36},{"ruleId":"328","severity":1,"message":"341","line":2,"column":27,"nodeType":"330","messageId":"331","endLine":2,"endColumn":41},{"ruleId":"328","severity":1,"message":"382","line":3,"column":10,"nodeType":"330","messageId":"331","endLine":3,"endColumn":20},{"ruleId":"328","severity":1,"message":"395","line":4,"column":8,"nodeType":"330","messageId":"331","endLine":4,"endColumn":18},{"ruleId":"328","severity":1,"message":"365","line":9,"column":10,"nodeType":"330","messageId":"331","endLine":9,"endColumn":15},{"ruleId":"328","severity":1,"message":"396","line":20,"column":12,"nodeType":"330","messageId":"331","endLine":20,"endColumn":18},{"ruleId":"328","severity":1,"message":"397","line":20,"column":20,"nodeType":"330","messageId":"331","endLine":20,"endColumn":29},{"ruleId":"328","severity":1,"message":"398","line":25,"column":9,"nodeType":"330","messageId":"331","endLine":25,"endColumn":15},{"ruleId":"399","severity":1,"message":"400","line":64,"column":36,"nodeType":"401","endLine":64,"endColumn":40},{"ruleId":"399","severity":1,"message":"400","line":74,"column":36,"nodeType":"401","endLine":74,"endColumn":40},{"ruleId":"399","severity":1,"message":"400","line":81,"column":36,"nodeType":"401","endLine":81,"endColumn":40},{"ruleId":"399","severity":1,"message":"400","line":87,"column":36,"nodeType":"401","endLine":87,"endColumn":40},{"ruleId":"402","severity":1,"message":"403","line":88,"column":60,"nodeType":"357","endLine":88,"endColumn":71},{"ruleId":"328","severity":1,"message":"404","line":11,"column":13,"nodeType":"330","messageId":"331","endLine":11,"endColumn":17},{"ruleId":"328","severity":1,"message":"398","line":11,"column":28,"nodeType":"330","messageId":"331","endLine":11,"endColumn":34},{"ruleId":"347","severity":1,"message":"405","line":26,"column":8,"nodeType":"349","endLine":26,"endColumn":10,"suggestions":"406"},{"ruleId":"328","severity":1,"message":"393","line":1,"column":27,"nodeType":"330","messageId":"331","endLine":1,"endColumn":36},{"ruleId":"328","severity":1,"message":"407","line":2,"column":8,"nodeType":"330","messageId":"331","endLine":2,"endColumn":16},{"ruleId":"328","severity":1,"message":"341","line":3,"column":27,"nodeType":"330","messageId":"331","endLine":3,"endColumn":41},{"ruleId":"328","severity":1,"message":"382","line":4,"column":10,"nodeType":"330","messageId":"331","endLine":4,"endColumn":20},{"ruleId":"328","severity":1,"message":"365","line":10,"column":10,"nodeType":"330","messageId":"331","endLine":10,"endColumn":15},{"ruleId":"328","severity":1,"message":"396","line":32,"column":12,"nodeType":"330","messageId":"331","endLine":32,"endColumn":18},{"ruleId":"328","severity":1,"message":"397","line":32,"column":20,"nodeType":"330","messageId":"331","endLine":32,"endColumn":29},{"ruleId":"328","severity":1,"message":"370","line":33,"column":12,"nodeType":"330","messageId":"331","endLine":33,"endColumn":15},{"ruleId":"328","severity":1,"message":"408","line":33,"column":17,"nodeType":"330","messageId":"331","endLine":33,"endColumn":23},{"ruleId":"328","severity":1,"message":"371","line":34,"column":12,"nodeType":"330","messageId":"331","endLine":34,"endColumn":16},{"ruleId":"328","severity":1,"message":"372","line":34,"column":18,"nodeType":"330","messageId":"331","endLine":34,"endColumn":25},{"ruleId":"399","severity":1,"message":"400","line":89,"column":36,"nodeType":"401","endLine":89,"endColumn":40},{"ruleId":"399","severity":1,"message":"400","line":99,"column":36,"nodeType":"401","endLine":99,"endColumn":40},{"ruleId":"399","severity":1,"message":"400","line":106,"column":36,"nodeType":"401","endLine":106,"endColumn":40},{"ruleId":"399","severity":1,"message":"400","line":112,"column":36,"nodeType":"401","endLine":112,"endColumn":40},{"ruleId":"402","severity":1,"message":"403","line":113,"column":62,"nodeType":"357","endLine":113,"endColumn":73},{"ruleId":"328","severity":1,"message":"338","line":2,"column":25,"nodeType":"330","messageId":"331","endLine":2,"endColumn":38},{"ruleId":"328","severity":1,"message":"339","line":6,"column":3,"nodeType":"330","messageId":"331","endLine":6,"endColumn":7},{"ruleId":"328","severity":1,"message":"340","line":7,"column":3,"nodeType":"330","messageId":"331","endLine":7,"endColumn":12},{"ruleId":"328","severity":1,"message":"341","line":8,"column":3,"nodeType":"330","messageId":"331","endLine":8,"endColumn":17},{"ruleId":"328","severity":1,"message":"342","line":9,"column":3,"nodeType":"330","messageId":"331","endLine":9,"endColumn":13},{"ruleId":"328","severity":1,"message":"343","line":10,"column":3,"nodeType":"330","messageId":"331","endLine":10,"endColumn":9},{"ruleId":"328","severity":1,"message":"344","line":13,"column":10,"nodeType":"330","messageId":"331","endLine":13,"endColumn":20},{"ruleId":"328","severity":1,"message":"345","line":20,"column":10,"nodeType":"330","messageId":"331","endLine":20,"endColumn":23},{"ruleId":"328","severity":1,"message":"346","line":43,"column":9,"nodeType":"330","messageId":"331","endLine":43,"endColumn":16},{"ruleId":"347","severity":1,"message":"348","line":56,"column":6,"nodeType":"349","endLine":56,"endColumn":12,"suggestions":"409"},{"ruleId":"328","severity":1,"message":"394","line":9,"column":27,"nodeType":"330","messageId":"331","endLine":9,"endColumn":34},{"ruleId":"328","severity":1,"message":"410","line":11,"column":8,"nodeType":"330","messageId":"331","endLine":11,"endColumn":17},{"ruleId":"328","severity":1,"message":"338","line":2,"column":25,"nodeType":"330","messageId":"331","endLine":2,"endColumn":38},{"ruleId":"328","severity":1,"message":"339","line":6,"column":3,"nodeType":"330","messageId":"331","endLine":6,"endColumn":7},{"ruleId":"328","severity":1,"message":"340","line":7,"column":3,"nodeType":"330","messageId":"331","endLine":7,"endColumn":12},{"ruleId":"328","severity":1,"message":"341","line":8,"column":3,"nodeType":"330","messageId":"331","endLine":8,"endColumn":17},{"ruleId":"328","severity":1,"message":"342","line":9,"column":3,"nodeType":"330","messageId":"331","endLine":9,"endColumn":13},{"ruleId":"328","severity":1,"message":"343","line":10,"column":3,"nodeType":"330","messageId":"331","endLine":10,"endColumn":9},{"ruleId":"328","severity":1,"message":"344","line":13,"column":10,"nodeType":"330","messageId":"331","endLine":13,"endColumn":20},{"ruleId":"328","severity":1,"message":"345","line":20,"column":10,"nodeType":"330","messageId":"331","endLine":20,"endColumn":23},{"ruleId":"328","severity":1,"message":"346","line":43,"column":9,"nodeType":"330","messageId":"331","endLine":43,"endColumn":16},{"ruleId":"328","severity":1,"message":"411","line":46,"column":19,"nodeType":"330","messageId":"331","endLine":46,"endColumn":29},{"ruleId":"355","severity":1,"message":"356","line":50,"column":26,"nodeType":"357","endLine":50,"endColumn":75},{"ruleId":"328","severity":1,"message":"394","line":9,"column":27,"nodeType":"330","messageId":"331","endLine":9,"endColumn":34},{"ruleId":"328","severity":1,"message":"396","line":66,"column":10,"nodeType":"330","messageId":"331","endLine":66,"endColumn":16},{"ruleId":"328","severity":1,"message":"397","line":66,"column":18,"nodeType":"330","messageId":"331","endLine":66,"endColumn":27},{"ruleId":"328","severity":1,"message":"390","line":69,"column":8,"nodeType":"330","messageId":"331","endLine":69,"endColumn":12},{"ruleId":"347","severity":1,"message":"391","line":83,"column":4,"nodeType":"349","endLine":83,"endColumn":12,"suggestions":"412"},{"ruleId":"328","severity":1,"message":"394","line":9,"column":27,"nodeType":"330","messageId":"331","endLine":9,"endColumn":34},{"ruleId":"328","severity":1,"message":"413","line":53,"column":9,"nodeType":"330","messageId":"331","endLine":53,"endColumn":11},{"ruleId":"328","severity":1,"message":"386","line":64,"column":8,"nodeType":"330","messageId":"331","endLine":64,"endColumn":12},{"ruleId":"328","severity":1,"message":"387","line":64,"column":14,"nodeType":"330","messageId":"331","endLine":64,"endColumn":21},{"ruleId":"355","severity":1,"message":"356","line":186,"column":17,"nodeType":"357","endLine":186,"endColumn":57},{"ruleId":"328","severity":1,"message":"393","line":1,"column":39,"nodeType":"330","messageId":"331","endLine":1,"endColumn":48},"no-unused-vars","'Editable' is defined but never used.","Identifier","unusedVar","no-native-reassign",["414"],"no-negated-in-lhs",["415"],"'Link' is defined but never used.","'EditDialog' is defined but never used.","'MTableToolbar' is defined but never used.","'Grid' is defined but never used.","'TextField' is defined but never used.","'InputAdornment' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'useHistory' is defined but never used.","'getModalStyle' is defined but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cols'. Either include it or remove the dependency array. If 'setColumns' needs the current value of 'cols', you can also switch to useReducer instead of useState and read 'cols' in the reducer.","ArrayExpression",["416"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Navbar' is defined but never used.","'Nav' is defined but never used.","'setRole' is assigned a value but never used.","'setOnline' is assigned a value but never used.","'ListGroup' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Alert' is defined but never used.","'Container' is defined but never used.","'useParams' is defined but never used.","'PostHome' is defined but never used.","'setReload' is assigned a value but never used.","'msg' is assigned a value but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","'DeleteDialog' is defined but never used.","'setCols' is assigned a value but never used.","'delFlag' is assigned a value but never used.","'DelPost' is assigned a value but never used.","'one' is defined but never used.","'stateImg' is assigned a value but never used.","'setDelFlag' is assigned a value but never used.","'IconButton' is defined but never used.","'EditIcon' is defined but never used.","'makeStyles' is defined but never used.","'setTitle' is assigned a value but never used.","'setBody' is assigned a value but never used.","'setImage' is assigned a value but never used.","'post' is assigned a value but never used.","'setPost' is assigned a value but never used.","'user' is assigned a value but never used.","'CardActions' is defined but never used.","'name' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["417"],"'useEffect' is defined but never used.","'Divider' is defined but never used.","'PersonIcon' is defined but never used.","'unique' is assigned a value but never used.","'setUnique' is assigned a value but never used.","'online' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'role' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'setOnline', and 'setRole'. Either include them or remove the dependency array.",["418"],"'Password' is defined but never used.","'setMsg' is assigned a value but never used.",["419"],"'EmailIcon' is defined but never used.","'setColumns' is assigned a value but never used.",["420"],"'id' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},{"desc":"421","fix":"427"},{"desc":"428","fix":"429"},"Update the dependencies array to be: [cols, rows]",{"range":"430","text":"431"},"Update the dependencies array to be: [history]",{"range":"432","text":"433"},"Update the dependencies array to be: [history, setOnline, setRole]",{"range":"434","text":"435"},{"range":"436","text":"431"},"Update the dependencies array to be: [history, reload]",{"range":"437","text":"438"},[1429,1435],"[cols, rows]",[934,936],"[history]",[869,871],"[history, setOnline, setRole]",[1472,1478],[2467,2475],"[history, reload]"]